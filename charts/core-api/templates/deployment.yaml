apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "core-api.fullname" . }}
  labels:
    {{- include "core-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "core-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "core-api.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "core-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: UI__BaseUrl
            value: {{.Values.auth.baseUrl}}
          - name: Auth0__Audience
            value: {{ .Values.auth.audience}}
          - name: Auth0__Domain
            value: {{ .Values.auth.domain }}
          - name: Auth0__IssuerBaseUrl
            value: {{ .Values.auth.issuerBaseUrl }}
          - name: Auth0__ClientId
            value: {{ .Values.auth.clientId }}
          - name: Auth0__ClientSecret
            value: {{ .Values.auth.clientSecret }}
          - name: Stripe__WebHookSecret
            value: '{{ .Values.stripe.webhookSecret }}'
          - name: Stripe__ApiKey
            value: '{{ .Values.stripe.apiKey }}'
          - name: Novu__ApiKey
            value: '{{ .Values.novu.apiKey }}'
          - name: Database__Host
            value: '{{ .Values.postgres.host }}'
          - name: Database__Port
            value: '{{ .Values.postgres.port }}'
          - name: Database__Database
            value: '{{ .Values.postgres.database }}'
          - name: Database__username
            value: '{{ .Values.postgres.user }}'
          - name: Database__password
            value: '{{ .Values.postgres.password }}'
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
